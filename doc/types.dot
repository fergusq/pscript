digraph G {
    node [fontname="sans-serif"]
    // Models
    String [shape="oval"]
    HasSize [shape="oval"]
    Copyable [shape="oval"]
    Container [shape="oval", group="collections"]
    Optional [shape="oval", group="collections"]
    List [shape="oval", group="collections"]
    MutableList [shape="oval", group="collections"]
    VariableSizeList [shape="oval", group="collections"]
    Stack [shape="oval", group="collections"]
    Queue [shape="oval", group="collections"]
    Appendable [shape="oval", group="collectors"]
    Pushable [shape="oval", group="collectors"]
    Summable [shape="oval", group="collections"]
    
    StreamSource [shape="oval", group="pipes"]
    StreamOperation [shape="oval", group="pipes"]
    Collector [shape="oval", group="collectors"]
    CopyCollector [shape="oval", group="collectors"]
    Iterator [shape="oval", group="iterators"]
    
    // Structs
    /**/ArrayList [shape="hexagon", group="collections"]
    /**/Array [shape="hexagon", group="collections"]
    /**/PipeIterator [label="FilteringIterator\nLimitingIterator\nMappingIterator", shape="hexagon", group="iterators"]
    /**/PipeOp [label="Filter\nLimit", shape="hexagon", group="pipes"]
    /**/PipeEnd [label="Fold\nForall", shape="hexagon", group="pipes"]
    
    // Enums
    /**/Maybe [shape="house", group="collections"]
    
    // Primitive types
    /**/Str [shape="box", group="primitives"]
    /**/Int [shape="box", group="primitives"]
    /**/Bool [shape="box", group="primitives"]
    /**/Char [shape="box", group="primitives"]
    /**/Func [shape="box", group="primitives"]
    
    /**/String -> Int
    /**/String -> Char
    /**/String -> Bool
    /**/String -> Str
    /**/String -> Array
    /**/String -> ArrayList
    
    /**/Copyable -> Array
    /**/Copyable -> ArrayList
    
    //+HasSize -> Str
    HasSize -> String
    //+HasSize -> Array
    //+HasSize -> ArrayList
    
    //+Eq -> Str
    Eq -> String
    //+Eq -> Array
    //+Eq -> ArrayList
    //+Eq -> Maybe
    
    Eq -> Container [style=dotted]
    StreamSource -> Container [style=dotted]
    //+Container -> Array
    //+Container -> ArrayList
    //+Container -> Maybe
    
    HasSize -> List [style=dotted]
    Container -> List [style=dotted]
    /**/List -> Str
    
    List -> MutableList [style=dotted]
    /**/MutableList -> Array
    /**/MutableList -> ArrayList
    
    List -> VariableSizeList [style=dotted]
    Stack -> VariableSizeList [style=dotted]
    Queue -> VariableSizeList [style=dotted]
    /**/VariableSizeList -> ArrayList
    
    Pushable -> Stack [style=dotted]
    //+Stack -> ArrayList
    
    Pushable -> Queue [style=dotted]
    
    //+StreamSource -> Maybe
    //+StreamSource -> Array
    //+StreamSource -> ArrayList
    StreamSource -> Iterator
    //+StreamSource -> ArrayIterator
    //+StreamSource -> MappingIterator
    
    /**/StreamOperation -> Func
    /**/StreamOperation -> PipeOp
    /**/StreamOperation -> PipeEnd
    
    /**/Summable -> Str
    Summable -> String
    /**/Summable -> Array
    /**/Summable -> ArrayList
    
    CopyCollector -> Appendable [style=dotted]
    /**/Appendable -> Array
    /**/Appendable -> ArrayList
    
    //+CopyCollector -> Array
    //+CopyCollector -> ArrayList
    
    Collector -> Pushable [style=dotted]
    //+Pushable -> ArrayList
    
    //+Collector -> ArrayList
    Collector -> CopyCollector
    
    StreamSource -> Iterator [style=dotted]
    /**/Iterator -> PipeIterator
    
    Container -> Optional [style=dotted]
    /**/Optional -> Maybe
}
